name: Lint

on:
  pull_request:
    branches:
      - main

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      golang: ${{ steps.matched.outputs.golang }}
      shell: ${{ steps.matched.outputs.shell }}
      shell_files: ${{ steps.matched.outputs.shell_files }}
      markdown: ${{ steps.matched.outputs.markdown }}
      yaml: ${{ steps.matched.outputs.yaml }}
      yaml_files: ${{ steps.matched.outputs.yaml_files }}
      gha-yaml: ${{ steps.matched.outputs.gha-yaml }}
      gha-yaml_files: ${{ steps.matched.outputs.gha-yaml_files }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - id: matched
      uses: dorny/paths-filter@v2
      with:
        list-files: 'shell'
        filters: |
          golang:
            - '**.go'
          shell:
            - '**.sh'
          markdown:
            - '**.md'
            - '**.MD'
          yaml:
            - '!(.github/workflows/**)**.yaml'
            - '!(.github/workflows/**)**.yml'
          gha-yaml:
            - '.github/workflows/**.yaml'
            - '.github/workflows/**.yml'

  # JOB to run for golang
  go:
    needs: changes
    if: ${{ needs.changes.outputs.golang == 'true' }}
    name: runner / suggester / gofmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: gofmt -w -s .
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: gofmt
          filter_mode: 'file'

  # JOB to run for shell
  shell:
    needs: changes
    if: ${{ needs.changes.outputs.shell == 'true' }}
    name: runner / suggester / shell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: shellcheck_suggester
        uses: mathiasvr/command-output@v1
        with:
          run: |
            for sh_file in ${{ needs.changes.outputs.shell_files }}; do
              shellcheck -f diff $sh_file | patch -p1
            done
        continue-on-error: true
      - name: suggester / shellcheck
        uses: reviewdog/action-suggester@v1
        with:
          tool_name: shellcheck
          filter_mode: 'file'

      - uses: reviewdog/action-shfmt@v1
        with:
          filter_mode: 'file'

      - name: Run ShellCheck
        if: ${{ steps.shellcheck_suggester.outputs.stderr }}
        uses: reviewdog/action-shellcheck@v1
        with:
          filter_mode: 'file'

  # JOB to run for markdown
  markdown:
    needs: changes
    if: ${{ needs.changes.outputs.markdown == 'true' }}
    name: runner / suggester / markdown
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: PurpleBooth/gfmfmt-action@v2.0.7
        with:
          check: false
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: gfmfmt
          filter_mode: 'file'

  # JOB to run for yaml
  yaml:
    needs: changes
    if: ${{ needs.changes.outputs.yaml == 'true' }}
    name: runner / suggester / yaml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: tecoli-com/actions-use-python-tools@v0
        with:
          tools: 'yamlfixer-opt-nc'
          cache: yes
      - run: yamlfixer ${{ needs.changes.outputs.yaml_files }}
        continue-on-error: true
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: yamlfixer
          filter_mode: 'file'

      - uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.github_token }}
          yamllint_flags: '${{ needs.changes.outputs.yaml_files }}'
          filter_mode: 'file'

  # JOB to run for gha-yaml
  gha-yaml:
    needs: changes
    if: ${{ needs.changes.outputs.gha-yaml == 'true' }}
    name: runner / suggester / gha-yaml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: reviewdog/action-actionlint@v1
        with:
          actionlint_flags: ${{ needs.changes.outputs.gha-yaml_files }}
          filter_mode: 'file'
