# Copyright 2020 The Knative Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Security'

on:
  workflow_call: {}

jobs:
  analyze-codeql:

    # NOTE: The CodeQL should be run as a separate job, as it adds its libraries
    # to LD_PRELOAD, which can have an impact on other tools, or at the very
    # least, cloud the output.
    name: Analyze CodeQL
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: knative/actions/setup-go@main

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - id: go_mod
      uses: andstor/file-existence-action@v1
      with:
        files: go.mod

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      if: ${{ steps.go_mod.outputs.files_exists == 'true' }}
      uses: github/codeql-action/init@v2
      with:
        languages: go

      # The `go build` command must be used, as `go test` isn't traced by 
      # CodeQL library (added to LD_PRELOAD)
      # TODO: Consider using codeql-autobuild action after https://github.com/github/codeql/issues/12010 is fixed.
    - name: Build project to allow CodeQL to track the sources
      if: ${{ steps.go_mod.outputs.files_exists == 'true' }}
      run: |
        tags="$(go run knative.dev/toolbox/go-ls-tags@latest --joiner=,)"

        echo "Building with tags: ${tags}"
        go build -tags "${tags}" ./...

    - name: Perform CodeQL Analysis
      if: ${{ steps.go_mod.outputs.files_exists == 'true' }}
      uses: github/codeql-action/analyze@v2


  check-unicode-control-characters:
    name: Check Unicode CC
    runs-on: ubuntu-latest

    steps:
    - name: Check for Unicode Control Characters configuration
      id: check-config
      uses: andstor/file-existence-action@v1
      with:
        files: .unicode-control-characters.config.py

    - name: Create empty Unicode Control Characters configuration
      if: steps.check-config.outputs.files_exists == 'false'
      run: touch .unicode-control-characters.config.py

    - name: Find Unicode Control Characters
      uses: pierdipi/unicode-control-characters-action@release-0.1
      with:
        args: --detailed --config .unicode-control-characters.config.py .

  govulncheck:
    name: Go vulnerability Detection
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
    steps:
      - name: Set up Go
        uses: knative/actions/setup-go@main

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/${{ github.repository }}

      - name: Govulncheck scan
        working-directory: ./src/github.com/${{ github.repository }}
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./... || true
