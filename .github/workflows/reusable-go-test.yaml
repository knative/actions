# Copyright 2020 The Knative Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test

on:

  workflow_call: 
    secrets:
      CODECOV_TOKEN:
        description: 'Token to upload Codecov coverage reports from action'
        required: true 

jobs:

  test:
    name: Unit Tests
    # Please don't use matrixes. This particular test is tracked in prow's branchprotector
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: knative/actions/setup-go@main

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge upstream
        if: github.event_name == 'pull_request'
        run: |
          if ! git config user.name > /dev/null; then
            git config user.name "John Doe"
          fi
          if ! git config user.email > /dev/null; then
            git config user.email "johndoe@localhost"
          fi
          git remote add upstream https://github.com/${{ github.repository }}.git
          git fetch upstream ${{ github.base_ref }}
          git pull --no-rebase --no-commit upstream ${{ github.base_ref }}
        shell: bash

      - name: Test
        id: unit-tests
        run: |
          covdir="$(mktemp -d)"
          while read -r gomod_dir; do
            pushd "$gomod_dir" > /dev/null
            echo "Testing ${gomod_dir}"
            go test -race -count=1 \
              -coverprofile="${covdir}/coverage-$(head -c 128 </dev/urandom | base64 | fold -w 8 | head -n 1).out" \
              -covermode=atomic ./... || failed=$?
            popd > /dev/null
            if (( failed )); then
              echo "Tests failed in module $gomod_dir" >&2
              exit $failed
            fi
          done < <(go run knative.dev/toolbox/modscope@latest list --path)
          echo "covdir=${covdir}" >> "$GITHUB_OUTPUT"

      - name: Check for .codecov.yaml
        id: codecov-enabled
        uses: andstor/file-existence-action@v3
        with:
          files: .codecov.yaml

      - if: steps.codecov-enabled.outputs.files_exists == 'true'
        name: Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ steps.unit-tests.outputs.covdir }}
